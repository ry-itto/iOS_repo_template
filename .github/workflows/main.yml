# This workflow uses in Template repository only.

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  distribute:
    runs-on: macOS-latest
    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin

    steps:
      - uses: actions/checkout@v2
      - name: Cache Gem
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Cache Mint
        uses: actions/cache@v2
        with:
          path: mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-mint-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache rbenv
        uses: actions/cache@v2
        with:
          path: /home/runner/.rbenv
          key: ${{ runner.os }}-rbenv-${{ hashFiles('**/.ruby-version') }}
          restore-keys: |
            {{ runner.os }}-rbenv-
      - name: Init
        run: ./scripts/bootstrap.sh Test com.example.template.Template true
      - name: XcodeGen generate
        run: mint run xcodegen
      - name: Build & Distribute
        run: bundle exec fastlane distribute_app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          FIREBASE_APP_ID_IOS:  ${{ secrets.FIREBASE_APP_ID_IOS }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN  }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          CODE_SIGNING_IDENTITY: ${{ secrets.CODE_SIGNING_IDENTITY }}
          RELEASE_NOTE: test
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
